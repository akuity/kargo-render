name: Release

on:
  release:
    types: 
    - created

jobs:

  publish-image:
    permissions:
      contents: write # Used to upload assets
      packages: write # Used to push images to `ghcr.io`
      id-token: write # Needed to create an OIDC token for keyless signing
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.image.outputs.digest }}
    services:
      registry:
        image: registry:2
        ports:
        - 5000:5000
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      with:
        driver-opts: network=host
    - name: Install Cosign
      uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
      with:
        cosign-release: 'v2.2.1'
    - name: Login to GHCR
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1      with:
      with:
        images: ghcr.io/akuity/kargo-render
        flavor: latest=false
        tags: type=semver,pattern={{raw}}
    - name: Build base image
      run: |
        BASE_IMAGE=localhost:5000/kargo-render-base make build-base-image
        docker push localhost:5000/kargo-render-base:latest-arm64
        docker push localhost:5000/kargo-render-base:latest-amd64
    - name: Build and push final image
      id: image
      uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
      with:
        platforms: linux/amd64,linux/arm64
        build-args: |
          BASE_IMAGE=localhost:5000/kargo-render-base
          VERSION=${{ github.ref_name }}
          GIT_COMMIT=${{ github.sha }}
          GIT_TREE_STATE=clean
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
        sbom: false
    - name: Sign image
      run: |
        cosign sign \
        -a "repo=${{ github.repository }}" \
        -a "workflow=${{ github.workflow }}" \
        -a "sha=${{ github.sha }}" \
        --yes \
        ghcr.io/akuity/kargo-render@${{ steps.image.outputs.digest}}
    - name: Publish SBOM
      uses: anchore/sbom-action@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2
      with:
        image: ${{ steps.meta.outputs.tags }}

  image-provenance:
    needs:
    - publish-image
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations. (https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/container/README.md#known-issues)
    # Must be referenced by a tag. https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/container/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ghcr.io/akuity/kargo-render
      digest: ${{ needs.publish-image.outputs.image-digest }}
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}
